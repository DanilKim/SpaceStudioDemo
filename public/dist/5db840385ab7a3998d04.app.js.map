{"version":3,"file":"5db840385ab7a3998d04.app.js","mappings":"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","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///webpack/runtime/create fake namespace object","webpack:///../src/components/TabPanelView.jsx","webpack:///../src/components/MenuBtnView.js","webpack:///../src/components/MenuBtnViewModel.js","webpack:///../src/components/SpaceCreate.js","webpack:///../src/components/CreateSpaceBtnViewModel.js","webpack:///../src/components/GeojsonUploadCard.js","webpack:///../src/components/RequestHttp.js","webpack:///../src/components/Objects/Building.js","webpack:///../src/components/CreateModel.js","webpack:///../src/stores/PlaymodeStore.js","webpack:///../src/stores/ControlStore.js","webpack:///../src/stores/ModelStore.js","webpack:///../src/stores/RootStore.js","webpack:///../src/stores/Context.js","webpack:///../src/components/SpaceSelectionCard.js","webpack:///../src/FirstPersonControl.js","webpack:///../src/world.js","webpack:///../src/components/SpaceModelView.js","webpack:///../src/MenuScreen.js","webpack:///../src/App.js","webpack:///./src/renderer.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\n\r\nexport default function TabPanel(props) {\r\n    return (\r\n        <div>\r\n            {props.value === props.index && \r\n            <Box sx={{ p: 0, m: 0, width: '85vw' }}>\r\n                {props.children}\r\n            </Box>}\r\n        </div> \r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MenuIcon from '@mui/icons-material/Menu'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuBtnViewModel from './MenuBtnViewModel';\r\n\r\nexport default function MenuBtnView() {\r\n  const { anchorEl, open, handleClick, handleClose } = MenuBtnViewModel();\r\n\r\n  return (\r\n    <Box>\r\n      <IconButton edge=\"start\" aria-label=\"menu\" aria-controls={open ? 'basic-menu' : undefined} aria-haspopup=\"true\" aria-expanded={open ? 'true' : undefined} onClick={handleClick} sx={{ mr: 5 }}>\r\n        <MenuIcon sx={{color: '#7c7c7c'}} />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"basic-menu\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        MenuListProps={{\r\n          'aria-labelledby': 'basic-button',\r\n        }}\r\n      >\r\n        <MenuItem onClick={handleClose}>\r\n          undo\r\n        </MenuItem>\r\n        <MenuItem onClick={handleClose}>\r\n          Redo\r\n        </MenuItem>\r\n        <MenuItem onClick={handleClose}>\r\n          Exit\r\n        </MenuItem>\r\n      </Menu>\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from 'react';\r\n\r\nexport default function MenuBtnViewModel(){\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return { anchorEl, open, handleClick, handleClose }\r\n}\r\n","import Box from '@mui/material/Box';\r\n\r\nexport default function SpaceCreate() {\r\n    return (\r\n        <Box sx={{display: 'flex', bgcolor: 'white'}}>\r\n\r\n        </Box>\r\n    )\r\n} \r\n","import * as React from 'react';\r\n\r\nexport default function CreateSpaceBtnViewModel() {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    return { open, handleClickOpen, handleClose }\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Add from '@mui/icons-material/Add';\r\nimport Typography from '@mui/material/Typography';\r\nimport Input from '@mui/material/Input'\r\nimport RequestHttp from './RequestHttp';\r\nimport CreateSpaceBtnViewModel from './CreateSpaceBtnViewModel';\r\n\r\nexport default function GeojsonUploadCard() {\r\n  const { open, handleClickOpen, handleClose } = new CreateSpaceBtnViewModel();\r\n\r\n  return (\r\n    <Box>\r\n      <Button color='inherit' sx={{ width: 1, height: 1/3, mt:3, bgcolor: '#dbdbdb', borderRadius: 5, display: 'flex', flexDirection: 'column'}} onClick={handleClickOpen} >\r\n        <Add sx={{color: '#5f5f5f', mt: 5}} />\r\n        <Typography variant=\"body1\" sx={{color: '#5f5f5f', mb: 5}}>\r\n          공공데이터로 도시 모델 만들기\r\n        </Typography>\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>공공데이터 업로드</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Geojson 파일을 직접 업로드하여 도시 모델을 만듭니다.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button component=\"label\">\r\n            공간 생성\r\n            <input type='file' accept=\".geojson, .json\" onChange={(e) => {RequestHttp(e,'SPACECREATE')}} hidden/>\r\n          </Button>\r\n          <Button onClick={handleClose}>취소</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import axios from 'axios'\r\n\r\n\r\nfunction RequestHttp(event, reqdata) {\r\n    for (let i = 0; i < event.target.files.length; i++){\r\n        if (event.target.files[i]) {\r\n            let form = new FormData();\r\n\r\n            switch (reqdata) {\r\n\r\n                case 'SPACECREATE':\r\n                    // 파일 처리\r\n                    form.append('user_id', 'Reacttester');\r\n                    form.append('geojsonfile', event.target.files[i], 'space.geojson');\r\n\r\n                    axios.post('../../data', form)\r\n                        .then(response => {\r\n                            if (response.data.checkfrontface == 'success'){\r\n                                console.log(response.data)\r\n                            }\r\n                            else{\r\n                                console.log('No space data')    \r\n                            }\r\n                        })\r\n                        .catch(error => {\r\n                            console.log('failed', error)\r\n                        })\r\n                    break;\r\n\r\n\r\n                case 'FACECREATE':\r\n                    // 파일 처리\r\n                    form.append('user_id', 'Reacttester');\r\n                    form.append('imgfile', event.target.files[i], 'imagefile.jpg');\r\n\r\n                    axios.post('/local/checkfrontface', form)\r\n                        .then(response => {\r\n                            if (response.data.checkfrontface == 'success'){\r\n                                console.log(response.data)\r\n                            }\r\n                            else{\r\n                                console.log('No front face')    \r\n                            }\r\n                        })\r\n                        .catch(error => {\r\n                            console.log('failed', error)\r\n                        })\r\n                    break;\r\n                \r\n                \r\n                \r\n                default:\r\n                    break;\r\n            }\r\n\r\n            \r\n\r\n    }\r\n    }\r\n\r\n}\r\n\r\nexport default RequestHttp\r\n","import { useFrame, useThree } from '@react-three/fiber';\r\nimport React, { useState, useRef, useEffect } from 'react';\r\n\r\n\r\nexport default function Building(props) {\r\n    const buildRef = useRef();\r\n    const [active, setActive] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    var velocity = 0;\r\n\r\n    const handleClick = (event) => {\r\n        event.stopPropagation();\r\n        alert(props.name);\r\n    }\r\n    var time = 0;\r\n    useFrame((_, delta) => {\r\n        if (active) {\r\n            if (buildRef.current.position.y < 0.01) {\r\n                velocity = 2;\r\n            } else {\r\n                velocity -= 0.1;\r\n            }\r\n            buildRef.current.position.y += velocity * delta;\r\n        } else {\r\n            buildRef.current.position.y = 0;\r\n            velocity = 0;\r\n        }\r\n    })\r\n\r\n    return (<>\r\n        <mesh\r\n            ref={buildRef}\r\n            geometry={props.geometry}\r\n            position={props.position}\r\n            scale={props.scale}\r\n            name={props.name}\r\n            castShadow\r\n            receiveShadow\r\n            onPointerOver={(event) => {\r\n                event.stopPropagation();\r\n                setActive(true);\r\n            }}\r\n            onPointerOut={(event) => {\r\n                event.stopPropagation();\r\n                setActive(false);\r\n            }}\r\n            onClick={handleClick}\r\n        >\r\n            <meshStandardMaterial\r\n                attach=\"material\"\r\n                color={active ? \"hotpink\" : props.color}\r\n            />\r\n        </mesh>\r\n\r\n    </>\r\n    );\r\n\r\n};\r\n\r\n\r\n//import Button from '@mui/material/Button';\r\n//import Dialog from '@mui/material/Dialog';\r\n//import DialogActions from '@mui/material/DialogActions';\r\n//import DialogContent from '@mui/material/DialogContent';\r\n//import DialogContentText from '@mui/material/DialogContentText';\r\n//import DialogTitle from '@mui/material/DialogTitle';\r\n\r\n\r\n//<Dialog open={open} onClose={handleClose}>\r\n//    <DialogTitle>공공데이터 업로드</DialogTitle>\r\n//    <DialogContent>\r\n//    <DialogContentText>\r\n//        {props.name} 건물의 실내로 들어가겠습니까?\r\n//    </DialogContentText>\r\n//    </DialogContent>\r\n//    <DialogActions>\r\n//    <Button component=\"label\">\r\n//        실내 공간 작업 시작\r\n//    </Button>\r\n//    <Button onClick={handleClose}>취소</Button>\r\n//    </DialogActions>\r\n//</Dialog>\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport Building from './Objects/Building';\r\n\r\nconst heightAttr = \"층수\";\r\n//heightAttr = \"HEIGHT\",\r\n//heightFn = function(val){ return Math.pow(parseFloat(val), root); }, \r\nconst heightFn = function (val) { return val }; // identity function\r\nconst max = 40;\r\nconst z_max = 200;\r\nconst z_rel = 0.07;\r\nconst r = 0;\r\nconst scale_x = 300;\r\nconst scale_y = 300;\r\nconst scale_factor = 0.0001;\r\nconst heightScaler = 0.03;\r\n\r\nconst translateLat = function (lat) {\r\n    return (lat);\r\n};\r\nconst translateLng = function (lng) {\r\n    return (lng);\r\n};\r\n\r\nfunction addShape(shape, extrude, color, x, y, z, rx, ry, rz, s) {\r\n    //console.log(shape, extrude*100);\r\n    //Extrusion settings\r\n    var extrudeSettings = {\r\n        depth: extrude * 50,\r\n        steps: 1,\r\n        material: 0,\r\n        extrudeMaterial: 1,\r\n        bevelEnabled: false\r\n    };\r\n\r\n    //Create the geometry\r\n    var geometry = new THREE.ExtrudeGeometry(shape, extrudeSettings);\r\n\r\n    //console.log(geometry)\r\n    return geometry\r\n\r\n}\r\n\r\nfunction getMedianPoint(data) {\r\n    var X = data.map(d => d[0]);\r\n    var Y = data.map(d => d[1]);\r\n    const median = arr => {\r\n        const mid = Math.floor(arr.length / 2),\r\n            nums = [...arr].sort((a, b) => a - b);\r\n        return arr.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2;\r\n    };\r\n    return [median(X), median(Y)];\r\n}\r\n\r\n\r\nexport default async function CreateModel(city, objects, firstMed) {\r\n\r\n    //console.log(city, objects);\r\n    var json, json_road, json_water;\r\n\r\n    var fast = false\r\n    var geoms = [];\r\n    var building_names = [];\r\n    var building_types = [];\r\n    var offsets = [];\r\n    var geoms_water = [];\r\n    var geoms_road = [];\r\n\r\n\r\n    var shapeCount = 0, subset_size = 5000;\r\n    var shapeCount_road = 0;\r\n    var shapeCount_water = 0;\r\n    var coordinate;\r\n    var pallet = [[\"#FF0000\", \"#FF5E00\", \"#FFBB00\", \"#FFE400\", \"#ABF200\", \"#1DDB16\", \"#00D8FF\", \"#0054FF\", \"#0100FF\", \"#5F00FF\", \"#FF00DD\", \"#FF007F\", \"#000000\", \"#FFFFFF\"],\r\n    [\"#FFD8D8\", \"#FAE0D4\", \"#FAECC5\", \"#FAF4C0\", \"#E4F7BA\", \"#CEFBC9\", \"#D4F4FA\", \"#D9E5FF\", \"#DAD9FF\", \"#E8D9FF\", \"#FFD9FA\", \"#FFD9EC\", \"#F6F6F6\", \"#EAEAEA\"],\r\n    [\"#FFA7A7\", \"#FFC19E\", \"#FFE08C\", \"#FAED7D\", \"#CEF279\", \"#B7F0B1\", \"#B2EBF4\", \"#B2CCFF\", \"#B5B2FF\", \"#D1B2FF\", \"#FFB2F5\", \"#FFB2D9\", \"#D5D5D5\", \"#BDBDBD\"],\r\n    [\"#F15F5F\", \"#F29661\", \"#F2CB61\", \"#E5D85C\", \"#BCE55C\", \"#86E57F\", \"#5CD1E5\", \"#6799FF\", \"#6B66FF\", \"#A566FF\", \"#F361DC\", \"#F361A6\", \"#A6A6A6\", \"#8C8C8C\"],\r\n    [\"#CC3D3D\", \"#CC723D\", \"#CCA63D\", \"#C4B73B\", \"#9FC93C\", \"#47C83E\", \"#3DB7CC\", \"#4374D9\", \"#4641D9\", \"#8041D9\", \"#D941C5\", \"#D9418C\", \"#747474\", \"#5D5D5D\"],\r\n    [\"#980000\", \"#993800\", \"#997000\", \"#998A00\", \"#6B9900\", \"#2F9D27\", \"#008299\", \"#003399\", \"#050099\", \"#3F0099\", \"#990085\", \"#99004C\", \"#4C4C4C\", \"#353535\"],\r\n    [\"#670000\", \"#662500\", \"#664B00\", \"#665C00\", \"#476600\", \"#22741C\", \"#005766\", \"#002266\", \"#030066\", \"#2A0066\", \"#660058\", \"#660033\", \"#212121\", \"#191919\"]];\r\n\r\n\r\n    async function getJsonAsync(file) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n            let response = await fetch(file, config);\r\n            let data = await response.json()\r\n            return data;\r\n        } catch (err) {\r\n            console.log(\"Json Fetch Error!!\");\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n\r\n    function buildShape_building(data) {\r\n        json = data;\r\n        console.log(\"Building buildShape (\" + shapeCount + \"/\" + json.features.length + \")\");\r\n        if (shapeCount < json.features.length) {\r\n            var shapeSession = 0;\r\n            for (var s = shapeCount; s < json.features.length && shapeSession < subset_size; s++) {\r\n                shapeSession++;\r\n                shapeCount++;\r\n                var good = true;\r\n                var points = [];\r\n                //Check if the geometry has at least two coordinates\r\n                if (json.features[s].properties.명칭 != null && json.features[s].properties.종류 != '무벽건물' && json.features[s].properties.종류 != '가건물' && json.features[s].properties.종류 != '기타' && json.features[s].properties.종류 != '온실') {\r\n                    for (var j = 0; j < json.features[s].geometry.coordinates.length; j++) {   // multipolygon 에서 각 polygon들 뽑아냄\r\n                        if (json.features[s].geometry.coordinates[j].length < 1 || json.features[s].geometry.coordinates[j][0] < 1 || json.features[s].geometry.coordinates[j][0].length < 4) {\r\n                            good = false;\r\n                        } else {\r\n                            for (var i = 0; i < json.features[s].geometry.coordinates[j][0].length; i++) {  // exterior ring만 고려되는 중.. (interior ring 무시)\r\n                                coordinate = json.features[s].geometry.coordinates[j][0][i]\t   // ploygon의 exterior ring\r\n                                //Check for weird values\r\n                                if (coordinate[0] && coordinate[1] && coordinate[0] > 0 && coordinate[1] > 0) {\r\n                                    points.push(new THREE.Vector2(translateLat(coordinate[0]), translateLng(coordinate[1])));\r\n\r\n                                }\r\n                                else {\r\n                                    good = false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    good = false;\r\n                }\r\n\r\n                //If the geometry is safe, continue\r\n                if (good) {\r\n\r\n                    //Calculate the height of the current geometry for extrusion\r\n                    var h = heightFn(json.features[s].properties[heightAttr]);\r\n                    if (isNaN(parseFloat(json.features[s].properties[heightAttr]))) {\r\n                        if (fast) {\r\n                            good = false;\r\n                        }\r\n                        h = 0;\r\n                    }\r\n\r\n                    if (!h || h < 0) {\r\n                        if (fast) {\r\n                            good = false;\r\n                        }\r\n                        h = 0;\r\n                    }\r\n\r\n                    if (h > max) {\r\n                        h = max;\r\n                    }\r\n\r\n                    //Remove all objects that have no height information for faster rendering\r\n                    if (h == 0 && fast) {\r\n                        good = false;\r\n                    }\r\n                }\r\n\r\n                //If the geometry is still safe, continue\r\n                if (good) {\r\n\r\n                    //Calculate the third dimension\r\n                    var z = h//((h/max)*z_max);\r\n                    if (!z || z < 1) { z = 0; }\r\n\r\n                    var geom = addShape(new THREE.Shape(points), z * z_rel, null, 0, 50, 0, r, 0, 0, 1);\r\n                    geom.computeBoundingBox();\r\n                    geom.rotateX(-0.5 * Math.PI);\r\n                    var offset = geom.boundingBox.getCenter(new THREE.Vector3());\r\n                    offsets.push([offset.x, offset.z]);\r\n                    geoms.push(geom.translate(-offset.x, 0, -offset.z));\r\n\r\n                    //geoms.push(addShape( new THREE.Shape( points ), z*z_rel, null, 0, 50, 0, r, 0, 0, 1 ))\r\n                    building_names.push(json.features[s].properties.명칭)\r\n                    building_types.push(json.features[s].properties.용도)\r\n                }\r\n            }\r\n        }\r\n        return geoms\r\n    }\r\n\r\n\r\n    function buildShape_road(data) {\r\n        json_road = data;\r\n        console.log(\"Road buildShape (\" + shapeCount_road + \"/\" + json_road.features.length + \")\");\r\n        if (shapeCount_road < json_road.features.length) {\r\n            var shapeSession = 0;\r\n            for (var s = shapeCount_road; s < json_road.features.length && shapeSession < subset_size; s++) {\r\n                shapeSession++;\r\n                shapeCount_road++;\r\n                var good = true;\r\n                var points = [];\r\n                //Check if the geometry has at least two coordinates\r\n\r\n                for (var j = 0; j < json_road.features[s].geometry.coordinates.length; j++) {   // multipolygon 에서 각 polygon들 뽑아냄\r\n                    if (json_road.features[s].geometry.coordinates[j].length < 1 || json_road.features[s].geometry.coordinates[j][0] < 1 || json_road.features[s].geometry.coordinates[j][0].length < 4) {\r\n                        good = false;\r\n                    } else {\r\n                        for (var i = 0; i < json_road.features[s].geometry.coordinates[j][0].length; i++) {  // exterior ring만 고려되는 중.. (interior ring 무시)\r\n                            coordinate = json_road.features[s].geometry.coordinates[j][0][i]\t   // ploygon의 exterior ring\r\n                            //Check for weird values\r\n                            if (coordinate[0] && coordinate[1] && coordinate[0] > 0 && coordinate[1] > 0) {\r\n                                points.push(new THREE.Vector2(translateLat(coordinate[0]), translateLng(coordinate[1])));\r\n                            }\r\n                            else {\r\n                                good = false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                //If the geometry is safe, continue\r\n                if (good) {\r\n\r\n                    //Calculate the height of the current geometry for extrusion\r\n                    var h = heightFn(json_road.features[s].properties[heightAttr]);\r\n                    if (isNaN(parseFloat(json_road.features[s].properties[heightAttr]))) {\r\n                        if (fast) {\r\n                            good = false;\r\n                        }\r\n                        h = 0;\r\n                    }\r\n\r\n                    if (!h || h < 0) {\r\n                        if (fast) {\r\n                            good = false;\r\n                        }\r\n                        h = 0;\r\n                    }\r\n\r\n                    if (h > max) {\r\n                        h = max;\r\n                    }\r\n\r\n                    //Remove all objects that have no height information for faster rendering\r\n                    if (h == 0 && fast) {\r\n                        good = false;\r\n                    }\r\n                }\r\n\r\n                //If the geometry is still safe, continue\r\n                if (good) {\r\n\r\n                    //Calculate the third dimension\r\n                    var z = ((h / max) * z_max);\r\n                    //console.console.log(h, max, z_max, z);\r\n                    if (!z || z < 1) { z = 0; }\r\n\r\n                    //Calculate the color of the object\r\n                    //In this sample code we use a blue to red range to visualize the height of the object (blue short to red tall)\r\n\r\n                    var geom = addShape(new THREE.Shape(points), 0, null, 0, 50, 0, r, 0, 0, 1);\r\n\r\n                    geoms_road.push(geom);\r\n\r\n\r\n                }\r\n            }\r\n        }\r\n        return geoms_road\r\n    }\r\n\r\n\r\n    function buildShape_water(data) {\r\n        json_water = data;\r\n        console.log(\"Road buildShape (\" + shapeCount_water + \"/\" + json_water.features.length + \")\");\r\n        if (shapeCount_water < json_water.features.length) {\r\n            var shapeSession = 0;\r\n            for (var s = shapeCount_water; s < json_water.features.length && shapeSession < subset_size; s++) {\r\n                shapeSession++;\r\n                shapeCount_water++;\r\n                var good = true;\r\n                var points = [];\r\n                //Check if the geometry has at least two coordinates\r\n\r\n                for (var j = 0; j < json_water.features[s].geometry.coordinates.length; j++) {   // multipolygon 에서 각 polygon들 뽑아냄\r\n                    if (json_water.features[s].geometry.coordinates[j].length < 1 || json_water.features[s].geometry.coordinates[j][0] < 1 || json_water.features[s].geometry.coordinates[j][0].length < 4) {\r\n                        good = false;\r\n                    } else {\r\n                        for (var i = 0; i < json_water.features[s].geometry.coordinates[j][0].length; i++) {  // exterior ring만 고려되는 중.. (interior ring 무시)\r\n                            coordinate = json_water.features[s].geometry.coordinates[j][0][i]\t   // ploygon의 exterior ring\r\n                            //Check for weird values\r\n                            if (coordinate[0] && coordinate[1] && coordinate[0] > 0 && coordinate[1] > 0) {\r\n                                points.push(new THREE.Vector2(translateLat(coordinate[0]), translateLng(coordinate[1])));\r\n                            }\r\n                            else {\r\n                                good = false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                //If the geometry is safe, continue\r\n                if (good) {\r\n\r\n                    //Calculate the height of the current geometry for extrusion\r\n                    var h = heightFn(json_water.features[s].properties[heightAttr]);\r\n                    if (isNaN(parseFloat(json_water.features[s].properties[heightAttr]))) {\r\n                        if (fast) {\r\n                            good = false;\r\n                        }\r\n                        h = 0;\r\n                    }\r\n\r\n                    if (!h || h < 0) {\r\n                        if (fast) {\r\n                            good = false;\r\n                        }\r\n                        h = 0;\r\n                    }\r\n\r\n                    if (h > max) {\r\n                        h = max;\r\n                    }\r\n\r\n                    //Remove all objects that have no height information for faster rendering\r\n                    if (h == 0 && fast) {\r\n                        good = false;\r\n                    }\r\n                }\r\n\r\n                //If the geometry is still safe, continue\r\n                if (good) {\r\n\r\n                    //Calculate the third dimension\r\n                    var z = ((h / max) * z_max);\r\n                    //console.console.log(h, max, z_max, z);\r\n                    if (!z || z < 1) { z = 0; }\r\n\r\n                    //Calculate the color of the object\r\n                    //In this sample code we use a blue to red range to visualize the height of the object (blue short to red tall)\r\n\r\n                    var geom = addShape(new THREE.Shape(points), 0, null, 0, 50, 0, r, 0, 0, 1);\r\n\r\n                    geoms_water.push(geom);\r\n                }\r\n            }\r\n        }\r\n        return geoms_water\r\n    }\r\n\r\n\r\n    function Add_building(data) {\r\n        //[active, setActive] = useState(false);\r\n        //[ref, setRef] = useState(null);\r\n        //\r\n        //const handleHover = (event) => {\r\n        //\r\n        //}\r\n\r\n        var geom_total = buildShape_building(data);\r\n        var groups_by_types = [];\r\n\r\n        if (!firstMed) {\r\n            var med = getMedianPoint(offsets);\r\n            firstMed = med;\r\n        } else {\r\n            var med = firstMed;\r\n        }\r\n\r\n        const set = new Set(building_types);\r\n        const types = [...set];\r\n        for (var i = 0; i < types.length; i++) {\r\n            groups_by_types.push([]);\r\n        }\r\n\r\n        // add each of the buildings\r\n        for (var g = 0; g < geom_total.length; g++) {\r\n            //buildRef = useRef();\r\n            var color_idx = types.indexOf(building_types[g])\r\n            const material = new THREE.MeshPhongMaterial({ color: pallet[0][color_idx] });\r\n\r\n            var offset = offsets[g];\r\n\r\n            groups_by_types[color_idx].push(\r\n                <Building\r\n                    key={g}\r\n                    geometry={geom_total[g]}\r\n                    color={pallet[0][color_idx]}\r\n                    position={[scale_factor * scale_x * (offset[0] - med[0]), 0, scale_factor * scale_y * (offset[1] - med[1])]}\r\n                    scale={[scale_factor * scale_x, heightScaler, scale_factor * scale_y]}\r\n                    name={building_names[g]}\r\n                />\r\n            )\r\n\r\n            //groups_by_types[color_idx].push(\r\n            //    <mesh\r\n            //        key={g}\r\n            //        geometry={geom_total[g]}\r\n            //        material={material}\r\n            //        position={[scale_factor * scale_x * (offset[0] - med[0]), 0, scale_factor * scale_y * (offset[1] - med[1])]}\r\n            //        scale={[scale_factor * scale_x, heightScaler, scale_factor * scale_y]}\r\n            //        name={building_names[g]}\r\n            //        castShadow={true}\r\n            //        receiveShadow={true}\r\n            //        onClick={() => console.log(\"click!\")}\r\n            //    />\r\n            //);\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {types.map((g, id) => (\r\n                    <group key={\"group\" + String(id)}>\r\n                        {\r\n                            groups_by_types[id].map((m) => (\r\n                                m\r\n                            ))\r\n                        }\r\n                    </group>\r\n                ))}\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    function Add_road(data) {\r\n        var geom_total_road = buildShape_road(data);\r\n\r\n        // add road\r\n        const material_road = new THREE.MeshPhongMaterial({ color: 0x121526 });\r\n        const merged_mesh_road = THREE.BufferGeometry.BufferGeometryUtils.mergeBufferGeometries(geom_total_road, true); // 도로 각각의 geometry를 하나로 합치는 과정\r\n\r\n        merged_mesh_road.computeBoundingBox();\r\n        merged_mesh_road.rotateX(-0.5 * Math.PI);\r\n        var offset_road = merged_mesh_road.boundingBox.getCenter(new THREE.Vector3());\r\n        merged_mesh_road.translate(-offset_road.x, 0, -offset_road.z);\r\n\r\n        //var mesh_road = new THREE.Mesh(merged_mesh_road, material_road);\r\n        if (!firstMed) {\r\n            var med = [offset_road.x, offset_road.z];\r\n            firstMed = med;\r\n        } else {\r\n            var med = firstMed;\r\n        }\r\n\r\n        //mesh_road.position.set( scale_factor * scale_x * (offset_road.x - med[0]), 0, scale_factor * scale_y * (offset_road.z - med[1]));\r\n        //mesh_road.scale.set(scale_factor * scale_x , heightScaler, scale_factor * scale_y);\r\n        //\r\n        //mesh_road.name = city + ' road';\r\n        //mesh_road.castShadow = true;\r\n        //mesh_road.receiveShadow = true;\r\n        return (\r\n            <mesh\r\n                geometry={merged_mesh_road}\r\n                material={material_road}\r\n                position={[scale_factor * scale_x * (offset_road.x - med[0]), 0, scale_factor * scale_y * (offset_road.z - med[1])]}\r\n                scale={[scale_factor * scale_x, heightScaler, scale_factor * scale_y]}\r\n                key={city + ' road'}\r\n                castShadow={true}\r\n                receiveShadow={true}\r\n            />\r\n        )\r\n\r\n    }\r\n\r\n    function Add_water(data) {\r\n        var geom_total_water = buildShape_water(data);\r\n\r\n        // add river\r\n        const material_water = new THREE.MeshPhongMaterial({ color: 0x0AC9FF });\r\n        const merged_mesh_water = THREE.BufferGeometry.BufferGeometryUtils.mergeBufferGeometries(geom_total_water, true); // 강 각각의 geometry를 하나로 합치는 과정\r\n\r\n        merged_mesh_water.computeBoundingBox();\r\n        merged_mesh_water.rotateX(-0.5 * Math.PI);\r\n        var offset_water = merged_mesh_water.boundingBox.getCenter(new THREE.Vector3());\r\n        merged_mesh_water.translate(-offset_water.x, 0, -offset_water.z);\r\n\r\n        //var mesh_water = new THREE.Mesh(merged_mesh_water, material_water);\r\n        if (!firstMed) {\r\n            var med = [offset_water.x, offset_water.z];\r\n            firstMed = med;\r\n        } else {\r\n            var med = firstMed;\r\n        }\r\n\r\n        return (\r\n            <mesh\r\n                geometry={merged_mesh_water}\r\n                material={material_water}\r\n                position={[scale_factor * scale_x * (offset_water.x - med[0]), 0, scale_factor * scale_y * (offset_water.z - med[1])]}\r\n                scale={[scale_factor * scale_x, heightScaler, scale_factor * scale_y]}\r\n                key={city + ' river'}\r\n                castShadow={true}\r\n                receiveShadow={true}\r\n            />\r\n        )\r\n\r\n    }\r\n\r\n\r\n    var jsonFile = \"../../data/\" + String(city) + \"_building.geojson\"\r\n    var jsonFile_road = \"../../data/\" + String(city) + \"_road.geojson\"\r\n    var jsonFile_water = \"../../data/\" + String(city) + \"_water.geojson\"\r\n\r\n    var render_list = [];\r\n\r\n    await (async () => {\r\n        for await (const object of objects) {\r\n\r\n            if (object === '건물') {\r\n                const data = await getJsonAsync(jsonFile);\r\n                render_list.push(Add_building(data));\r\n            } else if (object === '도로') {\r\n                const data = await getJsonAsync(jsonFile_road);\r\n                render_list.push(Add_road(data));\r\n            } else if (object === '강') {\r\n                const data = await getJsonAsync(jsonFile_water);\r\n                render_list.push(Add_water(data));\r\n            }\r\n        }\r\n\r\n    })()\r\n\r\n    return ({\r\n        'components': render_list,\r\n        'firstMed': firstMed\r\n    });\r\n\r\n}","import { action, makeObservable, observable } from \"mobx\";\r\n\r\nexport class PlaymodeStore {\r\n    rootStore;\r\n\r\n    playMode = false;\r\n    pauseState = false;\r\n\r\n    constructor(root) {\r\n        makeObservable(this, {\r\n            playMode : observable,\r\n            pauseState : observable,\r\n\r\n            pause : action,\r\n            play : action,\r\n            enterPm : action,\r\n            exitPm : action\r\n        })\r\n\r\n        this.rootStore = root;\r\n\r\n        //this.playMode = false;\r\n        //this.pauseState = false;\r\n\r\n    }\r\n\r\n    pause = () => {\r\n        this.pauseState = true;\r\n    };\r\n\r\n    play = () => {\r\n        this.pauseState = false;\r\n    };\r\n\r\n    enterPm = () => {\r\n        this.playMode = true;\r\n    };\r\n\r\n    exitPm = () => {\r\n        this.playMode = false;\r\n    };\r\n    \r\n}\r\n","import { action, makeObservable, observable } from \"mobx\";\r\n\r\nexport class ControlStore {\r\n    rootStore;\r\n\r\n    controls = null;\r\n\r\n    constructor(root) {\r\n        makeObservable(this, {\r\n            controls : observable,\r\n        })\r\n\r\n        this.rootStore = root;\r\n\r\n        //this.controls = null;\r\n\r\n    }\r\n\r\n}\r\n","import { action, makeObservable, observable } from \"mobx\";\r\n\r\nexport class ModelStore {\r\n    rootStore;\r\n\r\n    model = [];\r\n    firstMed = null;\r\n\r\n    constructor(root) {\r\n        makeObservable(this, {\r\n            model : observable,\r\n            addModel : action,\r\n        })\r\n\r\n        this.rootStore = root;\r\n    }\r\n\r\n    addModel = (newModel) => {\r\n        this.model = [...this.model, ...newModel['components']];\r\n        this.firstMed = newModel['firstMed'];\r\n    }\r\n\r\n}\r\n","import { PlaymodeStore } from \"./PlaymodeStore\";\r\nimport { ControlStore } from \"./ControlStore\";\r\nimport { ModelStore } from \"./ModelStore\";\r\n\r\nexport class RootStore{\r\n    PlaymodeStore;\r\n    ControlStore;\r\n    ModelStore;\r\n    // 다른 Store들 여기에 계속 추가\r\n\r\n    constructor() {\r\n        this.PlaymodeStore = new PlaymodeStore(this);\r\n        this.ControlStore = new ControlStore(this);\r\n        this.ModelStore = new ModelStore(this);\r\n    }\r\n}","   \r\nimport * as React from 'react';\r\nimport { RootStore } from './RootStore';\r\n\r\nexport const StoreContext = React.createContext(new RootStore());\r\nexport const StoreProvider = StoreContext.Provider;\r\n\r\nexport const useStores = () => React.useContext(StoreContext);","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Select  from '@mui/material/Select';\r\nimport { ListSubheader } from '@mui/material';\r\nimport CreateModel from './CreateModel';\r\nimport { useStores } from '../stores/Context';\r\nimport { observer } from 'mobx-react';\r\n\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nconst BoxSx = { color: 'inherit', width: 1, height: 1/3, mt:3, bgcolor: '#dbdbdb', borderRadius: 5, display: 'flex', flexDirection: 'row', flexWrap: 'wrap', align: 'center'};\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nconst districts = [\r\n    {'city': {'name':'성남시', 'id':1}, 'dong': [{'name':'gumi', 'id':11}, {'name':'geumgok', 'id':12}]},\r\n    {'city': {'name':'용인시', 'id':2}, 'dong': [{'name':'dongchun', 'id':21}]}\r\n];\r\nconst objectList = ['건물', '도로', '강'];\r\n\r\n\r\nexport default observer( () => {\r\n\r\n  const [city, setCity] = React.useState('');\r\n  const [object, setObject] = React.useState([]);\r\n\r\n  const { ModelStore } = useStores();\r\n\r\n\r\n  const renderDongSelect = (dist) => {\r\n    const items = dist.dong.map( (d) => (\r\n      <MenuItem key={d.id} value={d.name}>{d.name}</MenuItem>\r\n    ));\r\n    return [<ListSubheader key={dist.city.id} value={dist.city.name}>{dist.city.name}</ListSubheader>, items]\r\n  };\r\n\r\n\r\n  const cityChange = (event) => {\r\n    setCity(event.target.value);\r\n  }\r\n\r\n\r\n  const objectChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setObject(\r\n      // On autofill we get a stringified value.\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n  };\r\n\r\n\r\n  const handleSubmit = () => {\r\n    //CreateModel(city, object, props.model['firstMed']).then( \r\n    //  val => props.setModel( \r\n    //    { 'components' : [...props.model['components'], ...val['components']], 'firstMed' : val['firstMed'] } \r\n    //  ) \r\n    //);\r\n\r\n    CreateModel(city, object, ModelStore.firstMed).then( \r\n      val => {ModelStore.addModel(val);}\r\n    );\r\n    \r\n    //useMemo( () => props.setModel( props.model.push(CreateModel(city, object, props.med, props.setMed), [city, object])));\r\n  }\r\n\r\n  return (\r\n    <Box sx={BoxSx}>\r\n      <FormControl sx={{ m: 1, width: 120 }}>\r\n        <InputLabel htmlFor=\"dong-select\">District</InputLabel>\r\n        <Select \r\n          defaultValue=\"\" \r\n          id=\"dong-select\" \r\n          label=\"District\"\r\n          value={city}\r\n          onChange={cityChange}\r\n        >\r\n          {districts.map((dist) => (renderDongSelect(dist)))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl sx={{ m: 1, width: 120 }}>\r\n        <InputLabel id=\"object-select\">Object</InputLabel>\r\n        <Select\r\n          labelId=\"object-select\"\r\n          id=\"object-select\"\r\n          multiple\r\n          value={object}\r\n          onChange={objectChange}\r\n          input={<OutlinedInput label=\"Tag\" />}\r\n          renderValue={(selected) => selected.join(', ')}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {objectList.map((obj) => (\r\n            <MenuItem key={obj} value={obj}>\r\n              <Checkbox checked={object.indexOf(obj) > -1} />\r\n              <ListItemText primary={obj} />\r\n            </MenuItem>\r\n          ))}\r\n          <MenuItem value=\"\">\r\n            <Checkbox disabled />\r\n            <ListItemText primary=\"지형 (미구현)\" />\r\n          </MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <Button onClick={handleSubmit} sx={{ mb: 0.5, ml: 7, width: 0.5, color: 'inherit', border: 0.7}} >\r\n        생성\r\n      </Button>\r\n    </Box>\r\n  );\r\n})\r\n","import React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { useThree, useFrame } from \"@react-three/fiber\";\r\nimport { PointerLockControls } from \"@react-three/drei\";\r\n\r\nconst fp = {\r\n    moveForward: false,\r\n    moveBackward: false,\r\n    moveLeft: false,\r\n    moveRight: false,\r\n    canJump: false,\r\n    velocity: new THREE.Vector3(),\r\n    direction: new THREE.Vector3(),\r\n    objects: [],\r\n    intersectedObject: undefined,\r\n    arrowHelper: undefined\r\n}\r\n//---1인칭 플레이에서 사용할 변수들\r\n\r\nfunction FirstPersonControl(props) {\r\n    const {\r\n        scene, // Default scene\r\n        camera, // Default camera\r\n        raycaster, // Default raycaster\r\n    } = useThree();\r\n    //---앞에 뭐가 있는지 가리키는 용도(총이라면 과녁 같은 것으로 생각하면 되겠죠.)\r\n\r\n    const controlsRef = useRef(null);\r\n    const controls = controlsRef.current;\r\n    const defaultHeight = camera.position.y;\r\n\r\n    useEffect(() => {\r\n\r\n        const createKeyInput = () => {\r\n            document.addEventListener('keydown', (event) => {\r\n                switch (event.code) {\r\n                    case 'ArrowUp':\r\n                    case 'KeyW':\r\n                        fp.moveForward = true;\r\n                        break;\r\n                    case 'ArrowLeft':\r\n                    case 'KeyA':\r\n                        fp.moveLeft = true;\r\n                        break;\r\n                    case 'ArrowDown':\r\n                    case 'KeyS':\r\n                        fp.moveBackward = true;\r\n                        break;\r\n                    case 'ArrowRight':\r\n                    case 'KeyD':\r\n                        fp.moveRight = true;\r\n                        break;\r\n                    case 'Space':\r\n                        if (fp.canJump === true) {\r\n                            fp.velocity.y += 10;\r\n                        }\r\n                        fp.canJump = false;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n\r\n            document.addEventListener('keyup', (event) => {\r\n                switch (event.code) {\r\n                    case 'ArrowUp':\r\n                    case 'KeyW':\r\n                        fp.moveForward = false;\r\n                        break;\r\n\r\n                    case 'ArrowLeft':\r\n                    case 'KeyA':\r\n                        fp.moveLeft = false;\r\n                        break;\r\n\r\n                    case 'ArrowDown':\r\n                    case 'KeyS':\r\n                        fp.moveBackward = false;\r\n                        break;\r\n\r\n                    case 'ArrowRight':\r\n                    case 'KeyD':\r\n                        fp.moveRight = false;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            })\r\n\r\n            document.addEventListener('mousedown', () => {\r\n                processRaycaster();\r\n            });\r\n\r\n            document.addEventListener('keydown', (event) => {\r\n                if (event.key === \"Escape\") {\r\n                    props.exit();\r\n                }\r\n            });\r\n        }\r\n\r\n        createKeyInput();\r\n        //---키보드로 플레이할 수 있도록 합니다.\r\n    }, []);\r\n\r\n\r\n    useFrame((_, delta) => {\r\n        if (controls.isLocked === true) {\r\n            drawRaycaster();\r\n\r\n            fp.velocity.x -= fp.velocity.x * 10.0 * delta;\r\n            fp.velocity.z -= fp.velocity.z * 10.0 * delta;\r\n\r\n            fp.velocity.y -= 9.8 * 5.0 * delta; // 5.0 = mass\r\n\r\n            fp.direction.z = Number(fp.moveForward) - Number(fp.moveBackward);\r\n            fp.direction.x = Number(fp.moveRight) - Number(fp.moveLeft);\r\n            fp.direction.normalize(); // this ensures consistent fp.movements in all fp.directions\r\n\r\n            if (fp.moveForward || fp.moveBackward) fp.velocity.z -= fp.direction.z * 40.0 * delta;\r\n            if (fp.moveLeft || fp.moveRight) fp.velocity.x -= fp.direction.x * 40.0 * delta;\r\n\r\n            controls.moveRight(- fp.velocity.x * delta);\r\n            controls.moveForward(- fp.velocity.z * delta);\r\n\r\n            controls.getObject().position.y += (fp.velocity.y * delta); // new behavior\r\n\r\n            if (controls.getObject().position.y < defaultHeight) {\r\n                fp.velocity.y = 0;\r\n                controls.getObject().position.y = defaultHeight;\r\n                fp.canJump = true;\r\n            }\r\n        } else {\r\n            controls.lock();\r\n        }\r\n\r\n    });\r\n\r\n    const processRaycaster = () => {\r\n        const intersects = raycaster.intersectObjects(fp.objects);\r\n        if (intersects.length > 0) {\r\n            if (fp.intersectedObject) {\r\n                fp.intersectedObject.material.color.setHex(0xffffff);\r\n            }\r\n            intersects[0].object.material.color.setHex(0xfff000);\r\n            intersects[0].object.material.opacity = 1;\r\n            fp.intersectedObject = intersects[0].object;\r\n\r\n            if (props.onSelect) {\r\n                controls.unlock();\r\n                if (fp.intersectedObject) {\r\n                    fp.intersectedObject.material.color.setHex(0xffffff);\r\n                }\r\n                fp.intersectedObject = undefined;\r\n                raycaster.set(new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, 0));\r\n                props.onSelect(intersects[0].object.userData);\r\n            }\r\n        } else {\r\n            if (fp.intersectedObject) {\r\n                fp.intersectedObject.material.color.setHex(0xffffff);\r\n            }\r\n            fp.intersectedObject = undefined;\r\n        }\r\n    }\r\n\r\n    const drawRaycaster = () => {\r\n        raycaster.set(camera.getWorldPosition(new THREE.Vector3()), camera.getWorldDirection(new THREE.Vector3()));\r\n        scene.remove(fp.arrowHelper);\r\n\r\n        let o = raycaster.ray.origin;\r\n        o.y -= 0.2;\r\n\r\n        fp.arrowHelper = new THREE.ArrowHelper(raycaster.ray.direction, o, 300, 0xff0000);\r\n        scene.add(fp.arrowHelper);\r\n    }\r\n\r\n    const handleUnlock = () => {\r\n        props.exit();\r\n    }\r\n\r\n    return (\r\n        <PointerLockControls ref={controlsRef} onUnlock={handleUnlock} camera={camera} />\r\n    )\r\n}\r\n\r\nexport default FirstPersonControl;","import React  from \"react\";\r\nimport { OrbitControls, Plane } from \"@react-three/drei\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport { useStores } from './stores/Context';\r\nimport { observer } from 'mobx-react';\r\nimport FirstPersonControl from './FirstPersonControl';\r\n\r\n\r\nfunction MyWorld() {\r\n    const { ModelStore, PlaymodeStore } = useStores();\r\n\r\n    const canvas_style = PlaymodeStore.playMode ? { background: \"#2f2f2f\" } : { background: \"white\" };\r\n    const camera_settings = PlaymodeStore.playMode ? { position: [0, 0.1, 10], fov: 50 } : { position: [0, 5, 10] };\r\n\r\n    return (\r\n        <Canvas\r\n          style={canvas_style}\r\n          camera={camera_settings}\r\n          id=\"canvas\"\r\n        >\r\n            {PlaymodeStore.playMode ? <FirstPersonControl exit={PlaymodeStore.exitPm}/> : <OrbitControls />}\r\n            <ambientLight intensity={0.1} />\r\n            <Plane\r\n                receiveShadow={true}\r\n                position={[0, -0.01, 0]} // 강, 도로 보다 살짝 아래로 위치 시키기\r\n                rotation={[- Math.PI / 2, 0, 0]}\r\n                args={[1000, 1000]}\r\n            >\r\n                <meshStandardMaterial color=\"white\" />\r\n            </Plane>\r\n            <directionalLight\r\n                castShadow\r\n                shadow-mapSize-height={10240}\r\n                shadow-mapSize-width={10240}\r\n                shadow-camera-left={-1000}\r\n                shadow-camera-right={1000}\r\n                shadow-camera-bottom={-1000}\r\n                shadow-camera-top={1000}\r\n                shadow-camera-near={0.1}\r\n                shadow-camera-far={1000}\r\n                shadow-radius={5}\r\n                shadow-blurSamples={5}\r\n                position={[15, 22, 10]}\r\n                intensity={1} />\r\n            {ModelStore.model}\r\n        </Canvas>\r\n    )\r\n} \r\n\r\nexport default observer(MyWorld);\r\n\r\n//{props.model['components']}\r\n","import React from \"react\";\r\nimport Box from '@mui/material/Box';\r\nimport {\r\n    Typography,\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n} from '@mui/material';\r\nimport GeojsonUploadCard from './GeojsonUploadCard'\r\nimport SpaceSelectionCard from './SpaceSelectionCard'\r\nimport MyWorld from '../world';\r\nimport { Plane } from '@react-three/drei'\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return (\r\n        <Box sx={{ height: '94vh', display: 'flex', bgcolor: 'white' }}>\r\n            <Card variant='elevation' sx={{ width: '20%', height: '97.5%', m: '1.25%', bgcolor: 'white', borderRadius: 5, border: 0.5, borderColor: '#dbdbdb' }}>\r\n                <CardHeader title=\"City Modeling\" sx={{ color: '#5f5f5f' }} />\r\n                <CardContent>\r\n                    <Card variant='elevation' sx={{ bgcolor: '#dbdbdb', borderRadius: 5, display: 'flex', flexDirection: 'row', boxShadow: 0, mt: -2 }}>\r\n                        <Typography component={'div'} variant=\"body1\" sx={{ ml: 2, flexGrow: 1, color: '#5f5f5f' }}>\r\n                            [도시 모델]\r\n                        </Typography>\r\n                        <Typography component={'div'} variant=\"body1\" sx={{ mr: 2, color: '#5f5f5f' }}>\r\n                            옵션을 선택하세요.\r\n                        </Typography>\r\n                    </Card>\r\n                    <GeojsonUploadCard />\r\n                    <SpaceSelectionCard/>\r\n                </CardContent>\r\n            </Card>\r\n            <Box sx={{ height: '100%', width: '80%' }}>\r\n                <MyWorld key='studio-mode'/>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n//raycaster={{ filter: (intersects, state) => intersects.slice(0, 1) }}\r\n","import {\r\n  IconButton,\r\n  Box,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Tabs,\r\n  Tab,\r\n} from '@mui/material';\r\n\r\nimport {\r\n  Undo,\r\n  Redo,\r\n  PlayArrow,\r\n  Settings,\r\n  ExitToApp,\r\n} from '@mui/icons-material';\r\n\r\n\r\nimport React, { useState } from 'react'\r\nimport TabPanel from './components/TabPanelView'\r\nimport MenuBtn from './components/MenuBtnView.js'\r\nimport SpaceCreate from './components/SpaceCreate.js';\r\nimport SpaceModelView from './components/SpaceModelView.js';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useStores } from './stores/Context';\r\n\r\n\r\nfunction MenuScreen(props) {\r\n  const { PlaymodeStore } = useStores();\r\n\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n  };\r\n\r\n  const enterPlayMode = () => {\r\n    PlaymodeStore.enterPm();\r\n      //props.sUp(true);\r\n  };\r\n  \r\n  return (\r\n      <Box sx={{ bgcolor: 'white', width: '100vw', height: '100vh' }}>\r\n        <AppBar position='absolute' sx={{ bgcolor: '#fafafa', borderBottom: 1, borderColor: '#eaeaea' }}>\r\n          <Toolbar variant=\"dense\">\r\n            <MenuBtn/>\r\n            <IconButton edge=\"start\" sx={{ mr: 2 }}>\r\n              <Undo sx={{color: '#7c7c7c'}} />\r\n            </IconButton>\r\n            <IconButton edge=\"start\" sx={{ mr: 5 }}>\r\n              <Redo sx={{color: '#7c7c7c'}} />\r\n            </IconButton>\r\n            <Typography component={'div'} variant=\"h6\" sx={{ mr: 10 ,color: '#7c7c7c' }}>\r\n              Tivine Space Studio\r\n            </Typography>\r\n            <Tabs value={value} onChange={handleChange} sx={{ flexGrow: 1 }} textColor=\"secondary\" indicatorColor=\"secondary\">\r\n              <Tab label=\"실외 공간 생성\" index='0' />\r\n              <Tab label=\"실내 공간 생성\" index='1' />\r\n            </Tabs>\r\n            <IconButton edge=\"start\" sx={{ mr: 3 }} onClick={enterPlayMode}>\r\n              <PlayArrow sx={{color: '#7c7c7c'}}/>\r\n            </IconButton>\r\n            <IconButton edge=\"start\" sx={{ mr: 3 }}>\r\n              <Settings sx={{color: '#7c7c7c'}} />\r\n            </IconButton>\r\n            <IconButton edge=\"start\" sx={{ mr: 1 }}>\r\n              <ExitToApp sx={{color: '#7c7c7c'}} />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Box sx={{ height: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'space-between', pt: '4.5vh'}}>\r\n          <TabPanel value={value} index={0}>\r\n            <Typography component={'div'} variant=\"body1\" sx={{ mr: 2, color: '#555555' }}>\r\n              <SpaceModelView/>\r\n            </Typography>\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1}>\r\n            <Typography component={'div'} variant=\"body1\" sx={{ mr: 2, color: '#555555' }}>\r\n              <SpaceCreate/>\r\n            </Typography>\r\n          </TabPanel>\r\n          <Box direction='row' justifySelf='flex-end' sx={{ width: '15vw', bgcolor: '#e4ddfa', p:3}}>\r\n            <Typography component={'div'} variant=\"body1\" sx={{ mr: 2, color: '#555555' }}>\r\n              Design Assets\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n  );\r\n}\r\n\r\nexport default observer(MenuScreen);\r\n","import React, { useState, useRef } from 'react'\r\nimport { Box } from '@mui/material';\r\nimport MenuScreen from './MenuScreen';\r\nimport MyWorld from './world';\r\nimport { observer } from 'mobx-react';\r\nimport { useStores } from './stores/Context';\r\n\r\n//<FirstPersonControl model={model} sUp={setUserPlaying} controlsRef={controlsRef}/>\r\n//<PointerLockControls ref={controlsRef}/>\r\n\r\nfunction App() {\r\n  const { PlaymodeStore } = useStores();\r\n\r\n  return (<>\r\n    {PlaymodeStore.playMode ?\r\n      <Box sx={{ width: '100vw', height: '100vh' }}>\r\n        <MyWorld key='play-mode'/>\r\n      </Box> :\r\n      <MenuScreen/>}\r\n  </>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport {\r\n  App,\r\n  StoreProvider,\r\n  RootStore\r\n} from 'outdoor-modeling';\r\n\r\nconst rootStore = new RootStore();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StoreProvider value={rootStore}>\r\n      <App />\r\n    </StoreProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk\"] = self[\"webpackChunk\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [744], function() { return __webpack_require__(4953); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","TabPanel","props","value","index","Box","sx","p","m","width","children","MenuBtnView","React","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","MenuBtnViewModel","IconButton","edge","undefined","onClick","mr","color","Menu","id","onClose","MenuListProps","MenuItem","SpaceCreate","display","bgcolor","CreateSpaceBtnViewModel","setOpen","handleClickOpen","GeojsonUploadCard","Button","height","mt","borderRadius","flexDirection","Add","Typography","variant","mb","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","component","type","accept","onChange","e","reqdata","i","target","files","length","form","FormData","append","axios","then","response","data","checkfrontface","console","log","catch","error","RequestHttp","hidden","Building","buildRef","useRef","useState","active","setActive","velocity","useFrame","_","delta","current","position","y","ref","geometry","scale","name","castShadow","receiveShadow","onPointerOver","stopPropagation","onPointerOut","alert","attach","max","z_max","heightScaler","addShape","shape","extrude","x","z","rx","ry","rz","s","extrudeSettings","depth","steps","material","extrudeMaterial","bevelEnabled","THREE","getMedianPoint","X","map","d","Y","median","arr","mid","Math","floor","nums","sort","a","b","city","objects","firstMed","getJsonAsync","buildShape_building","buildShape_road","buildShape_water","Add_building","Add_road","Add_water","geom_total_water","material_water","merged_mesh_water","computeBoundingBox","rotateX","PI","offset_water","boundingBox","getCenter","translate","med","scale_factor","key","geom_total_road","material_road","merged_mesh_road","offset_road","geom_total","groups_by_types","offsets","set","Set","building_types","types","push","g","color_idx","indexOf","offset","pallet","building_names","String","json_water","shapeCount_water","features","shapeSession","subset_size","good","points","j","coordinates","coordinate","h","properties","heightAttr","isNaN","parseFloat","fast","geom","geoms_water","json_road","shapeCount_road","geoms_road","json","shapeCount","명칭","종류","geoms","용도","file","config","headers","fetch","jsonFile","jsonFile_road","jsonFile_water","render_list","object","PlaymodeStore","root","pauseState","playMode","makeObservable","this","observable","pause","action","play","enterPm","exitPm","rootStore","ControlStore","controls","ModelStore","newModel","model","addModel","RootStore","StoreContext","StoreProvider","Provider","useStores","BoxSx","flexWrap","align","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","districts","objectList","observer","setCity","setObject","FormControl","InputLabel","htmlFor","Select","defaultValue","label","dist","items","dong","ListSubheader","renderDongSelect","labelId","multiple","split","input","OutlinedInput","renderValue","selected","join","obj","Checkbox","checked","ListItemText","primary","disabled","CreateModel","val","ml","border","fp","moveForward","moveBackward","moveLeft","moveRight","canJump","direction","intersectedObject","arrowHelper","useThree","scene","camera","raycaster","controlsRef","defaultHeight","useEffect","document","addEventListener","code","processRaycaster","exit","isLocked","drawRaycaster","Number","normalize","getObject","lock","intersects","intersectObjects","setHex","opacity","onSelect","unlock","userData","getWorldPosition","getWorldDirection","remove","o","ray","origin","add","PointerLockControls","onUnlock","canvas_style","background","camera_settings","fov","OrbitControls","intensity","rotation","args","Card","borderColor","CardHeader","title","CardContent","boxShadow","flexGrow","SpaceSelectionCard","setValue","AppBar","borderBottom","Toolbar","Undo","Redo","Tabs","newValue","textColor","indicatorColor","Tab","PlayArrow","Settings","ExitToApp","justifyContent","pt","SpaceModelView","justifySelf","ReactDOM","getElementById","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","every","splice","r","n","getter","__esModule","getPrototypeOf","__proto__","t","mode","ns","create","def","getOwnPropertyNames","forEach","definition","defineProperty","enumerable","get","globalThis","Function","window","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}